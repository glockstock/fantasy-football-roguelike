{"ast":null,"code":"var _jsxFileName = \"/Users/glockstock/Projects/fantasy-football-roguelike/frontend/src/components/GameBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGame } from '../context/GameContext';\nimport CardComponent from './CardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const {\n    gameState,\n    setGameState\n  } = useGame();\n  const [field, setField] = useState([]);\n  const [isPlayingRun, setIsPlayingRun] = useState(false);\n  const handleCardPlay = async card => {\n    if (!gameState) return;\n    const newField = [...field, card];\n    setField(newField);\n\n    // Check if this completes a drive (simplified logic)\n    if (card.type === 'play' && card.data.name.toLowerCase().includes('touchdown')) {\n      await playRun(newField);\n    }\n  };\n  const executeDrive = async cards => {\n    if (!gameState) return;\n    try {\n      const response = await fetch(`/api/game/${gameState.session_id}/play-run`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cards\n        })\n      });\n      const result = await response.json();\n      if (result.valid_run) {\n        // Update game state with new score\n        setGameState({\n          ...gameState,\n          score: gameState.score + result.run_score,\n          run: gameState.run + 1\n        });\n\n        // Clear field\n        setField([]);\n\n        // Show success message\n        alert(`Drive completed! +${result.run_score} points`);\n      } else {\n        alert('Invalid drive! Must end with a scoring play.');\n        setField([]);\n      }\n    } catch (error) {\n      console.error('Failed to execute drive:', error);\n    }\n  };\n  const clearField = () => {\n    setField([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"Game Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearField,\n          className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\",\n          children: \"Clear Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playRun(field),\n          disabled: field.length === 0,\n          className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\",\n          children: \"Play Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field h-32 rounded-lg mb-6 relative overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white font-bold text-lg\",\n          children: field.length === 0 ? 'Drop cards here to build your run' : `${field.length} cards played`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-4 gap-4 min-h-32\",\n      children: field.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(CardComponent, {\n          card: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute -top-2 -right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, `${card.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold text-gray-800 mb-2\",\n        children: \"How to Play:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-gray-600 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Drag cards from your hand to the field to build a run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Runs must end with a scoring play (touchdown, field goal, etc.)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Each run scores points based on the cards played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Complete runs to advance through seasons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"TZUW8uXn6EBhRCIe+MR+pVk9DBA=\", false, function () {\n  return [useGame];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useGame","CardComponent","jsxDEV","_jsxDEV","GameBoard","_s","gameState","setGameState","field","setField","isPlayingRun","setIsPlayingRun","handleCardPlay","card","newField","type","data","name","toLowerCase","includes","playRun","executeDrive","cards","response","fetch","session_id","method","headers","body","JSON","stringify","result","json","valid_run","score","run_score","run","alert","error","console","clearField","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","index","id","_c","$RefreshReg$"],"sources":["/Users/glockstock/Projects/fantasy-football-roguelike/frontend/src/components/GameBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useGame } from '../context/GameContext';\nimport { Card, Player, Play, Modifier } from '../types/game';\nimport CardComponent from './CardComponent';\n\nconst GameBoard: React.FC = () => {\n  const { gameState, setGameState } = useGame();\n  const [field, setField] = useState<Card[]>([]);\n  const [isPlayingRun, setIsPlayingRun] = useState(false);\n\n  const handleCardPlay = async (card: Card) => {\n    if (!gameState) return;\n\n    const newField = [...field, card];\n    setField(newField);\n\n    // Check if this completes a drive (simplified logic)\n    if (card.type === 'play' && (card.data as Play).name.toLowerCase().includes('touchdown')) {\n      await playRun(newField);\n    }\n  };\n\n  const executeDrive = async (cards: Card[]) => {\n    if (!gameState) return;\n\n    try {\n      const response = await fetch(`/api/game/${gameState.session_id}/play-run`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ cards }),\n      });\n\n      const result = await response.json();\n      \n      if (result.valid_run) {\n        // Update game state with new score\n        setGameState({\n          ...gameState,\n          score: gameState.score + result.run_score,\n          run: gameState.run + 1,\n        });\n        \n        // Clear field\n        setField([]);\n        \n        // Show success message\n        alert(`Drive completed! +${result.run_score} points`);\n      } else {\n        alert('Invalid drive! Must end with a scoring play.');\n        setField([]);\n      }\n    } catch (error) {\n      console.error('Failed to execute drive:', error);\n    }\n  };\n\n  const clearField = () => {\n    setField([]);\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800\">Game Field</h2>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={clearField}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\"\n          >\n            Clear Field\n          </button>\n          <button\n            onClick={() => playRun(field)}\n            disabled={field.length === 0}\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n          >\n            Play Run\n          </button>\n        </div>\n      </div>\n\n      {/* Field Visualization */}\n      <div className=\"field h-32 rounded-lg mb-6 relative overflow-hidden\">\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-white font-bold text-lg\">\n            {field.length === 0 ? 'Drop cards here to build your run' : `${field.length} cards played`}\n          </div>\n        </div>\n      </div>\n\n      {/* Field Cards */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 min-h-32\">\n        {field.map((card, index) => (\n          <div key={`${card.id}-${index}`} className=\"relative\">\n            <CardComponent card={card} />\n            <div className=\"absolute -top-2 -right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold\">\n              {index + 1}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Run Instructions */}\n      <div className=\"mt-6 p-4 bg-gray-100 rounded-lg\">\n        <h3 className=\"font-bold text-gray-800 mb-2\">How to Play:</h3>\n        <ul className=\"text-sm text-gray-600 space-y-1\">\n          <li>• Drag cards from your hand to the field to build a run</li>\n          <li>• Runs must end with a scoring play (touchdown, field goal, etc.)</li>\n          <li>• Each run scores points based on the cards played</li>\n          <li>• Complete runs to advance through seasons</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}